# JDBC 逻辑库名称。在集群模式中，使用该参数来联通 ShardingSphere-JDBC 与 ShardingSphere-Proxy。
# 默认值：logic_db
databaseName: sharding_db

mode:
  type: Cluster
  repository:
    # 持久化仓库类型
    type: ZooKeeper
    # 持久化仓库所需属性
    props:
      # 注册中心命名空间
      namespace: governance
      # 注册中心连接地址
      server-lists: localhost:2181
      retryIntervalMilliseconds: 500
      timeToLiveSeconds: 60

dataSources:
  ds_1:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/ds_1
    username: root
    password: password
  ds_2:
    dataSourceClassName: com.zaxxer.hikari.HikariDataSource
    driverClassName: com.mysql.jdbc.Driver
    jdbcUrl: jdbc:mysql://localhost:3306/ds_2
    username: root
    password: password

rules:
  - !SHARDING
    # 数据分片规则配置
    tables:
      # 逻辑表名称
      order:
        # 由数据源名 + 表名组成
        actualDataNodes: ds_${0..1}.order_${0..1}
        # 分表策略，缺省表示使用默认分表策略，以下的分片策略只能选其一
        tableStrategy:
          # 用于单分片键的标准分片场景
          standard:
            # 分片列名称
            shardingColumn: order_id
            # 分片算法名称
            shardingAlgorithmName: order_inline
        # 分布式序列策略
        keyGenerateStrategy:
          # 自增列名称，缺省表示不使用自增主键生成器
          column: order_id
          # 分布式序列算法名称
          keyGeneratorName: snowflake
        # 分片审计策略
        auditStrategy:
          # 分片审计算法名称
          auditorNames:
            - sharding_key_required_auditor
          # 是否禁用分片审计hint
          allowHintDisable: true

      order_item:
        actualDataNodes: ds_${0..1}.order_item_${0..1}
        tableStrategy:
          standard:
            shardingColumn: order_id
            shardingAlgorithmName: order_item_inline
        keyGenerateStrategy:
          column: order_item_id
          keyGeneratorName: snowflake

      account:
        actualDataNodes: ds_${0..1}.account_${0..1}
        tableStrategy:
          standard:
            shardingAlgorithmName: account_inline
        keyGenerateStrategy:
          column: account_id
          keyGeneratorName: snowflake
    defaultShardingColumn: account_id
    # 绑定表规则列表
    bindingTables:
      - order,order_item
    # 默认数据库分片策略
    defaultDatabaseStrategy:
      standard:
        shardingColumn: user_id
        shardingAlgorithmName: database_inline
    # 默认表分片策略
    defaultTableStrategy:
      none:
    # 分片算法配置
    shardingAlgorithms:
      # 分片算法名称
      database_inline:
        # 分片算法类型
        type: INLINE
        # 分片算法属性配置
        props:
          algorithm-expression: ds_${user_id % 2}
      order_inline:
        type: INLINE
        props:
          algorithm-expression: order_${order_id % 2}
      order_item_inline:
        type: INLINE
        props:
          algorithm-expression: order_item_${order_id % 2}
      account_inline:
        type: INLINE
        props:
          algorithm-expression: account_${account_id % 2}
    # 分布式序列算法配置
    keyGenerators:
      # 分布式序列算法名称
      snowflake:
        # 分布式序列算法类型
        type: SNOWFLAKE
    # 分片审计算法配置
    auditors:
      sharding_key_required_auditor:
        type: DML_SHARDING_CONDITIONS

  - !BROADCAST
    # 广播表规则列表
    tables:
      - address

props:
  sql-show: true