buildscript {
    ext {
        helidonVersion = '4.1.3'
        mainClass = 'xyz.andornot.helidon.HelidonMain'
    }
}

plugins {
    id 'java'
    id 'application'
}

group 'xyz.andornot'
version '1.0-SNAPSHOT'

repositories {
    mavenCentral()
}

dependencies {
    implementation enforcedPlatform("io.helidon:helidon-dependencies:${helidonVersion}")
    implementation 'io.helidon.webserver:helidon-webserver'
    implementation 'io.helidon.http.media:helidon-http-media-jsonp'
    implementation 'io.helidon.webserver.observe:helidon-webserver-observe-health'
    implementation 'io.helidon.webserver.observe:helidon-webserver-observe-metrics'
    implementation 'io.helidon.config:helidon-config-yaml'
    implementation 'io.helidon.health:helidon-health-checks'
    implementation 'io.helidon.webclient:helidon-webclient'

    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine'
    testImplementation 'io.helidon.webserver.testing.junit5:helidon-webserver-testing-junit5'
    testImplementation 'io.helidon.webclient:helidon-webclient'
    testImplementation 'org.hamcrest:hamcrest-all'
}

test {
    useJUnitPlatform()
    jvmArgs '--enable-preview'
}

tasks.withType(JavaCompile).each {
    it.options.compilerArgs.add('--enable-preview')
    it.options.encoding = 'UTF-8'
}

// define a custom task to copy all dependencies in the runtime classpath
// into build/libs/libs
// uses built-in Copy
tasks.register('copyLibs', Copy) {
    from configurations.runtimeClasspath
    into 'build/libs/libs'
}

// add it as a dependency of built-in task 'assemble'
copyLibs.dependsOn jar
assemble.dependsOn copyLibs

// default jar configuration
// set the main classpath
// add each jar under build/libs/libs into the classpath
jar {
    archiveFileName = "${project.name}.jar"
    manifest {
        attributes('Main-Class': "${mainClass}",
                'Class-Path': configurations.runtimeClasspath.files.collect { "libs/$it.name" }.join(' ')
        )
    }
}

application {
    mainClass = "${mainClass}"
}